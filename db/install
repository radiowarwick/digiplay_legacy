#!/bin/bash

printf "\n"
printf "Radio Warwick Digital Playout System\n"
printf "Database Installation script\n"
printf "Copyright (c) 2006 Radio Warwick\n\n"

# create database
printf "Checking for existing database...";
if [ `psql -ls | grep " digiplay " | wc -l` == "1" ]; then
	printf "\n"
	printf " -> Found existing database 'digiplay'\n";
	printf "\nDo you want to backup existing database? [Y/n]: ";
	read backup;
	if [ "${backup:-Y}" == "Y" ] || [ "$backup" == "y" ]; then
		printf " -> Backing up current sustainer playlist..."
		psql -tc "SELECT md5 FROM audio WHERE sustainer='t'" digiplay | cut -d ' ' -f 2 > sustainer.bak
		printf "done\n"
		printf " -> Current sustainer playlist saved to 'sustainer.bak'\n"
		printf " -> Backing up existing database..."
		if [ `psql -ls | grep digiplay_bak | wc -l` == "1"]; then
			psql -qc "DROP DATABASE digiplay_bak;" template1
		fi
		psql -qc "ALTER DATABASE digiplay RENAME TO digiplay_bak;" template1
		printf "done.\n"
		printf " -> Existing database saved as digiplay_bak\n"
	else
		printf "\nInstallation was terminated by the user.\n"
		exit -1
	fi
else
	printf "none found.\n"
fi

printf "Creating digiplay database..."
psql -qc "CREATE DATABASE digiplay;" template1
printf "done.\n"

# create users
printf "Creating digiplay database users..."
if [ ! `psql -tqc "select usename from pg_user where usename='digiplay_user';" template1` ]; then
	psql -qc "CREATE USER digiplay_user;" template1
fi
printf "done.\n"

# create all the relations, views, etc
printf "Processing DDL script..."
echo "BEGIN TRANSACTION;" > /tmp/digiplay.sql.new
sed -e 's/VARCHAR(10)/VARCHAR/g' -e 's/"id" INTEGER not null/"id" SERIAL/g' \
   digiplay.sql >> /tmp/digiplay.sql.new
echo "END TRANSACTION;" >> /tmp/digiplay.sql.new
printf "done.\n"
printf "Generating database objects..."
psql -qf /tmp/digiplay.sql.new digiplay  2>/dev/null
rm /tmp/digiplay.sql.new
printf "done.\n"

# grant permissions to the digiplay_user on everything (for now)
printf "Granting database permissions..."
SQL="SELECT relname FROM pg_class WHERE (relkind = 'r' OR relkind = 'S')
AND relname !~ '^pg_' AND relname !~ '^sql_' ORDER BY relname"
OBJ=`psql -t -c "${SQL}" digiplay`
OBJ=`echo ${OBJ} | sed 's/ /, /g'`
SQL="GRANT ALL ON ${OBJ} TO digiplay_user"
psql -qc "${SQL}" digiplay
printf "done.\n"

# import default data
printf "Importing data..."
psql -qf data.sql digiplay
printf "done.\n\n"
